var Hyperloop=require("hyperloop"),EnclosingClass=require("android.graphics.Path"),Direction=function(){var e;e=1==arguments.length&&arguments[0].isNativeProxy&&arguments[0].isInstanceProxy&&arguments[0].isInstanceOf("android.graphics.Path$Direction")?arguments[0]:Direction.class.newInstance(arguments),this.$native=e,this._hasPointer=null!=e,this._private={}},SuperClass=require("java.lang.Enum");Direction.prototype=Object.create(SuperClass.prototype),Direction.prototype.constructor=Direction,Object.defineProperty(Direction.prototype,"super",{get:function(){return this._hasPointer?new Direction(this.$native.super):null},enumerable:!0}),Direction.className="android.graphics.Path$Direction",Direction.prototype.className="android.graphics.Path$Direction",Object.defineProperty(Direction,"class",{get:function(){return Hyperloop.getClass("android.graphics.Path$Direction")},enumerable:!0,configurable:!1}),Direction.cast=function(e){return e.$native&&e.$native.isInstanceProxy?new Direction(Hyperloop.cast("android.graphics.Path$Direction",e.$native)):e},Object.defineProperty(Direction,"CW",{get:function(){if(!this.class)return null;var e=this.class.getNativeField("CW");if(null==e)return null;if(e.apiName){if("android.graphics.Path$Direction"===e.apiName)return new Direction(e);var t=require(e.apiName);return new t(e)}return e},enumerable:!0}),Object.defineProperty(Direction,"CCW",{get:function(){if(!this.class)return null;var e=this.class.getNativeField("CCW");if(null==e)return null;if(e.apiName){if("android.graphics.Path$Direction"===e.apiName)return new Direction(e);var t=require(e.apiName);return new t(e)}return e},enumerable:!0}),Direction.valueOf=function(){if(!this.class)return null;var e=this.class.callNativeFunction({func:"valueOf",instanceMethod:!1,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("android.graphics.Path$Direction"===e.apiName)return new Direction(e);var t=require(e.apiName);return new t(e)}return e},Direction.values=function(){if(!this.class)return null;var e=this.class.callNativeFunction({func:"values",instanceMethod:!1,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("android.graphics.Path$Direction"===e.apiName)return new Direction(e);var t=require(e.apiName);return new t(e)}return e},module.exports=Direction;