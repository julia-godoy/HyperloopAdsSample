var Hyperloop=require("hyperloop"),EnclosingClass=require("java.util.AbstractMap"),SimpleEntry=function(){var e;e=1==arguments.length&&arguments[0].isNativeProxy&&arguments[0].isInstanceProxy&&arguments[0].isInstanceOf("java.util.AbstractMap$SimpleEntry")?arguments[0]:SimpleEntry.class.newInstance(arguments),this.$native=e,this._hasPointer=null!=e,this._private={}},SuperClass=require("java.lang.Object");SimpleEntry.prototype=Object.create(SuperClass.prototype),SimpleEntry.prototype.constructor=SimpleEntry,Object.defineProperty(SimpleEntry.prototype,"super",{get:function(){return this._hasPointer?new SimpleEntry(this.$native.super):null},enumerable:!0}),SimpleEntry.className="java.util.AbstractMap$SimpleEntry",SimpleEntry.prototype.className="java.util.AbstractMap$SimpleEntry",Object.defineProperty(SimpleEntry,"class",{get:function(){return Hyperloop.getClass("java.util.AbstractMap$SimpleEntry")},enumerable:!0,configurable:!1}),SimpleEntry.extend=function(e){var t=Hyperloop.extend("java.util.AbstractMap$SimpleEntry"),n=function(){function n(e){if(e.apiName&&e.isNativeProxy&&e.isInstanceProxy){var t=require(e.apiName);return new t(e)}return e}function r(){for(var e=[],t=0;t<arguments.length;t++)e[t]=n(arguments[t]);return e}var i=t.newInstance(arguments),a=this,o=e,l={};Object.keys(o).forEach(function(e){a[e]=function(){return o[e].apply(a,arguments)},l[e]=function(){return a[e].apply(a,r.apply(this,arguments))}}),i.setOverrides(l),this.$native=i,this._hasPointer=null!=i,this._private={}};return n.prototype=Object.create(SimpleEntry.prototype),n.prototype.constructor=n,n},SimpleEntry.cast=function(e){return e.$native&&e.$native.isInstanceProxy?new SimpleEntry(Hyperloop.cast("java.util.AbstractMap$SimpleEntry",e.$native)):e},SimpleEntry.prototype.getKey=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"getKey",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap$SimpleEntry"===e.apiName)return new SimpleEntry(e);var t=require(e.apiName);return new t(e)}return e},SimpleEntry.prototype.getValue=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"getValue",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap$SimpleEntry"===e.apiName)return new SimpleEntry(e);var t=require(e.apiName);return new t(e)}return e},SimpleEntry.prototype.hashCode=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"hashCode",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap$SimpleEntry"===e.apiName)return new SimpleEntry(e);var t=require(e.apiName);return new t(e)}return e},SimpleEntry.prototype.setValue=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"setValue",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap$SimpleEntry"===e.apiName)return new SimpleEntry(e);var t=require(e.apiName);return new t(e)}return e},SimpleEntry.prototype.equals=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"equals",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap$SimpleEntry"===e.apiName)return new SimpleEntry(e);var t=require(e.apiName);return new t(e)}return e},SimpleEntry.prototype.toString=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"toString",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap$SimpleEntry"===e.apiName)return new SimpleEntry(e);var t=require(e.apiName);return new t(e)}return e},module.exports=SimpleEntry;