var Hyperloop=require("hyperloop"),parentPackage=require("java.util"),AbstractMap=function(){var e;1==arguments.length&&arguments[0].isNativeProxy&&arguments[0].isInstanceProxy&&arguments[0].isInstanceOf("java.util.AbstractMap")?e=arguments[0]:Ti.API.error("Cannot instantiate instance of abstract class: java.util.AbstractMap. Create a subclass using java.util.AbstractMap.extend();"),this.$native=e,this._hasPointer=null!=e,this._private={}},SuperClass=require("java.lang.Object");AbstractMap.prototype=Object.create(SuperClass.prototype),AbstractMap.prototype.constructor=AbstractMap,Object.defineProperty(AbstractMap.prototype,"super",{get:function(){return this._hasPointer?new AbstractMap(this.$native.super):null},enumerable:!0}),AbstractMap.className="java.util.AbstractMap",AbstractMap.prototype.className="java.util.AbstractMap",Object.defineProperty(AbstractMap,"class",{get:function(){return Hyperloop.getClass("java.util.AbstractMap")},enumerable:!0,configurable:!1}),AbstractMap.extend=function(e){var t=Hyperloop.extend("java.util.AbstractMap"),n=function(){function n(e){if(e.apiName&&e.isNativeProxy&&e.isInstanceProxy){var t=require(e.apiName);return new t(e)}return e}function r(){for(var e=[],t=0;t<arguments.length;t++)e[t]=n(arguments[t]);return e}var i=t.newInstance(arguments),a=this,o=e,l={};Object.keys(o).forEach(function(e){a[e]=function(){return o[e].apply(a,arguments)},l[e]=function(){return a[e].apply(a,r.apply(this,arguments))}}),i.setOverrides(l),this.$native=i,this._hasPointer=null!=i,this._private={}};return n.prototype=Object.create(AbstractMap.prototype),n.prototype.constructor=n,n},AbstractMap.cast=function(e){return e.$native&&e.$native.isInstanceProxy?new AbstractMap(Hyperloop.cast("java.util.AbstractMap",e.$native)):e},Object.defineProperty(AbstractMap,"SimpleImmutableEntry",{get:function(){return require("java.util.AbstractMap$SimpleImmutableEntry")},enumerable:!0}),Object.defineProperty(AbstractMap,"SimpleEntry",{get:function(){return require("java.util.AbstractMap$SimpleEntry")},enumerable:!0}),AbstractMap.prototype.entrySet=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"entrySet",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.containsKey=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"containsKey",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.values=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"values",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.isEmpty=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"isEmpty",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.clear=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"clear",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.containsValue=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"containsValue",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.put=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"put",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.remove=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"remove",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.size=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"size",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.hashCode=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"hashCode",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.get=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"get",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.putAll=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"putAll",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.equals=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"equals",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.clone=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"clone",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.toString=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"toString",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},AbstractMap.prototype.keySet=function(){if(!this._hasPointer)return null;var e=this.$native.callNativeFunction({func:"keySet",instanceMethod:!0,args:Array.prototype.slice.call(arguments)});if(null==e)return null;if(e.apiName){if("java.util.AbstractMap"===e.apiName)return new AbstractMap(e);var t=require(e.apiName);return new t(e)}return e},module.exports=AbstractMap;